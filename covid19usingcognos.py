# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lIctEGk-P1oPXCY71Fd9PPSNbndhALtL
"""

import pandas as pd
import matplotlib.pyplot as plt

# Load COVID-19 data from a CSV file
data = pd.read_csv('/content/Covid_19_cases4.csv')

# Calculate mean and standard deviation of cases and deaths
mean_cases = data['cases'].mean()
std_cases = data['cases'].std()
mean_deaths = data['deaths'].mean()
std_deaths = data['deaths'].std()

# Print the statistics
print("Mean cases:", mean_cases)
print("Standard deviation of cases:", std_cases)
print("Mean deaths:", mean_deaths)
print("Standard deviation of deaths:", std_deaths)

# Create a bar chart comparing mean cases and mean deaths
plt.figure(figsize=(10, 6))
data.groupby('countriesAndTerritories')['cases'].mean().plot(kind='bar', label='Mean Cases')
data.groupby('countriesAndTerritories')['deaths'].mean().plot(kind='bar', color='red', alpha=0.5, label='Mean Deaths')
plt.title('Mean COVID-19 Cases and Deaths by Country')
plt.xlabel('Country')
plt.ylabel('Mean Count')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Define the path to your CSV file containing COVID-19 data
data_file_path = '/content/Covid_19_cases4.csv'

# Load the data from the CSV file into a Pandas DataFrame
try:
    data = pd.read_csv(data_file_path)
except FileNotFoundError:
    print(f"File '{data_file_path}' not found. Please check the file path.")

# Filter data for a specific country (e.g., 'Austria')
country_name = 'Austria'
country_data = data[data['countriesAndTerritories'] == country_name]

# Create a line plot to visualize daily cases and deaths
plt.figure(figsize=(12, 6))
plt.plot(country_data['dateRep'], country_data['cases'], label='Daily Cases')
plt.plot(country_data['dateRep'], country_data['deaths'], label='Daily Deaths')
plt.title(f'COVID-19 Cases and Deaths in {country_name}')
plt.xlabel('Date')
plt.ylabel('Count')
plt.legend()
plt.xticks(rotation=45)
plt.grid(True)
plt.tight_layout()
plt.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Load your dataset into a Pandas DataFrame
# Replace 'your_dataset.csv' with the actual file path or URL of your dataset
df = pd.read_csv('/content/Covid_19_cases4.csv')

# Assuming your dataset has columns named 'cases' and 'deaths', replace with actual column names
cases_mean = df['cases'].mean()
deaths_mean = df['deaths'].mean()
cases_std = df['cases'].std()
deaths_std = df['deaths'].std()

# Create bar charts to visualize mean values
plt.figure(figsize=(10, 5))
plt.bar(['Cases', 'Deaths'], [cases_mean, deaths_mean], color=['blue', 'red'])
plt.xlabel('Category')
plt.ylabel('Mean Value')
plt.title('Mean Values of Cases and Deaths')
plt.show()

# Create bar charts to visualize standard deviations
plt.figure(figsize=(10, 5))
plt.bar(['Cases', 'Deaths'], [cases_std, deaths_std], color=['blue', 'red'])
plt.xlabel('Category')
plt.ylabel('Standard Deviation')
plt.title('Standard Deviations of Cases and Deaths')
plt.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load your dataset into a Pandas DataFrame
# Replace 'your_dataset.csv' with the actual file path or URL of your dataset
df = pd.read_csv('/content/Covid_19_cases4.csv')

# Assuming your dataset has columns named 'cases' and 'deaths', replace with actual column names
cases_mean = df['cases'].mean()
deaths_mean = df['deaths'].mean()
cases_std = df['cases'].std()
deaths_std = df['deaths'].std()

# Set up a figure with subplots
fig, axes = plt.subplots(2, 2, figsize=(12, 10))

# Create bar chart for mean values
sns.barplot(x=['Cases', 'Deaths'], y=[cases_mean, deaths_mean], ax=axes[0, 0])
axes[0, 0].set_title('Mean Values of Cases and Deaths')
axes[0, 0].set_ylabel('Mean Value')

# Create bar chart for standard deviations
sns.barplot(x=['Cases', 'Deaths'], y=[cases_std, deaths_std], ax=axes[0, 1])
axes[0, 1].set_title('Standard Deviations of Cases and Deaths')
axes[0, 1].set_ylabel('Standard Deviation')

# Create box plots for cases and deaths
sns.boxplot(x='variable', y='value', data=pd.melt(df[['cases', 'deaths']]), ax=axes[1, 0])
axes[1, 0].set_title('Box Plots of Cases and Deaths')
axes[1, 0].set_ylabel('Value')
axes[1, 0].set_xlabel('Category')

# Create histogram for cases
sns.histplot(data=df, x='cases', kde=True, ax=axes[1, 1], color='skyblue')
axes[1, 1].set_title('Histogram of Cases')
axes[1, 1].set_xlabel('Cases')
axes[1, 1].set_ylabel('Frequency')

# Adjust layout
plt.tight_layout()

# Show the plots
plt.show()